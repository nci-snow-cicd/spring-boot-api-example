pipeline {
    agent any

    triggers {
        pollSCM '* * * * *'
    }
    stages {
        stage('Build') {
            steps {
                sh './gradlew assemble'
            }
        }
        stage('SonarQube Analysis') {
	        steps {
                	script {
		        	sh "/var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarCubeScanner/bin/sonar-scanner \
		            	-Dsonar.host.url=http://ncias-d2583-c.nci.nih.gov:9000  \
		            	-Dsonar.projectName=spring-boot-api-example \
		            	-Dsonar.projectVersion=1.0 \
	    	        	-Dsonar.projectKey=spring-boot-api-example \
		            	-Dsonar.language=java \
	    	        	-Dsonar.login=2bd9b9b28760e95bf52aaa0f98a047c2c87c8537 \
	    	        	-Dsonar.sources=/var/jenkins_home/jobs/$JOB_NAME \
	    	        	-Dsonar.sourceEncoding=UTF-8 \
		            	-Dsonar.java.binaries=/var/jenkins_home/jobs/theme-park-job-docker/workspace/build/classes"
            		}
	    	}
	}
        stage('Test') {
            steps {
                sh './gradlew test'
            }
        }
        stage('Build Docker image') {
            steps {
                sh './gradlew docker'
            }
        }
        stage('Run Docker image') {
            steps {
                sh './gradlew dockerRun'
            }
        }
        stage('Push Docker image') {
            environment {
                DOCKER_HUB_LOGIN = credentials('docker-hub')
            }
            steps {
                sh 'docker login --username=$DOCKER_HUB_LOGIN_USR --password=$DOCKER_HUB_LOGIN_PSW'
                sh './gradlew dockerPush'
            }
        }
    }
}
